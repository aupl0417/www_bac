<?php
namespace app\wap\controller;

use app\common\controller\Wap;
use app\work\model\model;
use think\Request;
use think\Db;
use think\Session;

class Bank extends Wap{

    protected $userId;
    protected $platformId;

    public function _initialize(){
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->userId     = session('user.userId');
        $this->platformId = session('user.platformId');
    }

    public function index(){
        $where = ['ab_uid' => $this->userId, 'ab_platform_id' => $this->platformId, 'ab_isDelete' => 0];
        $field = 'ab_id as id,ab_bank_name as bankName,ab_card_number as cardNumber';
        $bank  = Db::name('account_bank')->where($where)->field($field)->select();

        if($bank){
            foreach($bank as $key=>&$val){
                $val['cardNumber'] = substr_replace($val['cardNumber'], '**** **** **** **** ', 0, strlen($val['cardNumber']) -  4);
            }
        }

        $this->assign('bankList', $bank);
        $this->assign('title', '银行卡管理');
        return $this->fetch();
    }

    public function edit()
    {
        // TODO: Implement edit() method.
    }

    public function create(){
        $user = Db::name('user_platform up')->where(['up_id' => $this->userId])
              ->field('u_id as id,u_name as name,u_auth as auth')
              ->join('db_user u', 'up.up_uid=u.u_id')->find();
        $bank = Db::name('bank')->where(['bank_enabled' => 1, 'bank_platform_id' => $this->platformId])->field('bank_id as id,bank_name as name')->select();
        if(Request::instance()->isPost()){
            !$user && $this->ajaxReturn(ajaxCallBack(301, array('msg' => '您还未登录', 'url' => url('login/index'))));

            $username   = input('post.username', '', 'htmlspecialchars,strip_tags,trim');
            $cardNumber = input('post.cardNumber', '', 'htmlspecialchars,strip_tags,trim');
            $bankId     = input('post.bankId', '', 'htmlspecialchars,strip_tags,trim');

            !preg_match('/^(\d{16}|\d{19})$/', $cardNumber) && $this->ajaxReturn(ajaxCallBack(300, '银行卡输入不正确'));
            mb_strlen($username, 'utf-8') < 2 && $this->ajaxReturn(ajaxCallBack(300, '请输入长度大于2位的持卡人姓名'));
//            !preg_match('/^\S{2,}$/', $username) && $this->ajaxReturn(ajaxCallBack(300, '请输入长度大于2位的持卡人姓名'));
            !$bankId && $this->ajaxReturn(ajaxCallBack(300, '请选择银行'));
            trim($user['name']) != $username && $this->ajaxReturn(ajaxCallBack(300, '持卡人必须为用户本人姓名'));
            $bank  = array_column($bank, 'name', 'id');

            if(Db::name('account_bank')->where(['ab_uid' => $this->userId, 'ab_card_number' => $cardNumber, 'ab_isDelete' => 0])->count()){
                $this->ajaxReturn(ajaxCallBack(300, '您已添加过该银行卡'));
            }

            if(Db::name('account_bank')->where(['ab_card_number' => $cardNumber, 'ab_isDelete' => 0])->count()){
                $this->ajaxReturn(ajaxCallBack(300, '该银行卡已添加'));
            }

            $data = array(
                'ab_uid'         => $this->userId,
                'ab_platform_id' => $this->platformId,
                'ab_bank_name'   => $bank[$bankId],
                'ab_card_number' => $cardNumber,
                'ab_account_name'=> $username,
                'ab_create_time' => date('Y-m-d H:i:s'),
            );

            if(!Db::name('account_bank')->where(['ab_uid' => $this->userId, 'ab_isDelete' => 0])->count()){
                $data['ab_is_default_card'] = 1;//如果没有绑定银行卡记录，则为默认卡
            }

            $res = Db::name('account_bank')->insert($data);
            !$res && $this->ajaxReturn(ajaxCallBack(300, '添加银行卡失败'));
            if (Session::has('tempurl')){
                if ($res){
                    session('tempurl', null);
                    $this->ajaxReturn(ajaxCallBack(301,['msg' => '添加银行卡成功', 'url'=>url('ucenter/withdraw')]));
                }
            }
            $this->ajaxReturn(ajaxCallBack(200, '添加银行卡成功'));
        }else{
            if (!Session::has('user') || Session::get('user.userId')==''){
                $this->redirect('login/index');
            }

            $user['auth'][2] != 1 && $this->error('尚未通过实名认证，请返回大唐天下平台认证', null);

            $ref =$_SERVER['HTTP_REFERER'];
            if (strpos($ref,'withdraw')!==false){
                Session::set('tempurl','ucenter/withdraw');
            }

            $this->assign('bankList', $bank);
            $this->assign('title', '添加银行卡');
            return $this->fetch();
        }
    }

    public function detail(){

        $id = input('id', 0, 'intval');
        !$id && $this->ajaxReturn(ajaxCallBack(300, '非法参数'));

        if (!Session::has('user') || Session::get('user.userId')==''){
            $this->redirect('login/index');
        }

        $userId = session('user.userId');

        $field = 'ab_id as id,ab_bank_name as bankName,ab_card_number as cardNumber,ab_account_name as accountName';
        $cardInfo = Db::name('account_bank')->where(array('ab_id' => $id, 'ab_uid' => $userId, 'ab_isDelete' => 0))->field($field)->find();
        !$cardInfo && $this->ajaxReturn(ajaxCallBack(300, '银行卡信息不存在'));
        $cardInfo['cardNumber'] = substr_replace($cardInfo['cardNumber'], '**** **** **** **** ', 0, strlen($cardInfo['cardNumber']) -  4);
        $this->assign('cardInfo', $cardInfo);
        $this->assign('title', '银行卡信息');
        return $this->fetch();
    }

    public function remove(){
        $id = input('id', 0, 'intval');
        !$id && $this->ajaxReturn(ajaxCallBack(300, '非法参数'));

        if (!Session::has('user') || Session::get('user.userId')==''){
            $this->ajaxReturn(ajaxCallBack(301, array('msg' => '您未登录', 'url' => url('login/index'))));
        }

        $where  = array('ab_id' => $id, 'ab_uid' => session('user.userId'), 'ab_isDelete' => 0);
        if(!Db::name('account_bank')->where($where)->count()){
            $this->ajaxReturn(ajaxCallBack(300, '银行卡信息不存在'));
        }
        $res = Db::name('account_bank')->where($where)->update(['ab_isDelete' => 1]);
        !$res && $this->ajaxReturn(ajaxCallBack(300, '银行卡解除绑定失败'));
        $this->ajaxReturn(ajaxCallBack(200, '银行卡解除绑定成功'));
    }
}
