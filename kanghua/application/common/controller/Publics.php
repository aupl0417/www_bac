<?php
namespace app\common\controller;
use think\Cache;
use think\captcha\Captcha;
use think\Db;
use think\Request;
use think\Session;

/**
 *
 * User: lirong
 * Date: 2017/6/26
 * Time: 17:22
 */
class Publics extends Common{

     public function _initialize()
     {
         parent::_initialize(); // TODO: Change the autogenerated stub
     }

    /**
     * 检查大唐账号是否存在
     * @return bool
     */
    public function checkDttxNick(){

            $nick =input('post.dttxnick','','trim');
            $servicenick =input('post.servicenick','','trim');
            if (empty($nick) && empty($servicenick)){
                $this->ajaxReturn($this->retRemoteMessage('error',"请输入大唐账号"));
            }
            if (!empty($nick)){
                $data = getDttxUserInfo($nick);
            }else{
                $data = getDttxUserInfo($servicenick);
            }

            if ($data['status']=='1001'){
                return $this->ajaxReturn($this->retRemoteMessage('ok','姓名:'.$data['data']['realName'].',电话:'.$data['data']['tel']));
            }else{
                return $this->ajaxReturn($this->retRemoteMessage('error','账号不存在，请确认！'));
            }
    }


    /**
     * 检查推荐人是否存在
     * @return bool
     */
    public function checkdttxactive(){

            $nick =input('post.dttxnick','','trim');
            $uid =input('post.uid','','intval');

            if (empty($uid)){
                $this->ajaxReturn(ajaxCallBack(300,'参数错误！，请刷新后重试！'));
            }

            if (empty($nick)){
                $this->ajaxReturn(ajaxCallBack(300,'请输入大唐账号！'));
            }

            if (Session::get('user.username')==$nick){
                $this->ajaxReturn(ajaxCallBack(300,'推荐人不能设定为本人！'));
            }

            $res = Db::name('user_platform')->field('up_plateform_id')->where(['up_id'=>$uid])->find();
            if (empty($res)){
                $this->ajaxReturn(ajaxCallBack(300,'当前用户信息获取失败，请重新登录!'));
            }

            $fcodedata = Db::name('user_platform')
                ->alias('p')
                ->join('user u','p.up_uid=u.u_id','left')
                ->where(['up_plateform_id'=>$res['up_plateform_id']])->where('u_nick|u_tel','=',$nick)->find();

            if (empty($fcodedata)){
                $this->ajaxReturn(ajaxCallBack(300,'未找到该推荐人，请确认是否激活本项目!'));
            }
            if ($fcodedata['up_isActive']==0){
                $this->ajaxReturn(ajaxCallBack(300,'该推荐人尚未激活本项目，请确认!'));
            }

            if ($fcodedata){
                $uname ="*".mb_substr($fcodedata['u_name'],1, mb_strlen($fcodedata['u_name'], 'utf-8'), 'utf-8');
                return $this->ajaxReturn(ajaxCallBack(200,'姓名:'.$uname.',电话:'.hidtel($fcodedata['u_tel'])));
            }else{
                return $this->ajaxReturn(ajaxCallBack(300,'账号不存在，请确认！'));
            }
    }

    /**
     * 检查会员真实姓名是否存在
     * @return bool
     */
    public function checkTrueName(){
        $trueName =input('post.trueName', '', 'trim');
        if (empty($trueName)){
            $this->ajaxReturn($this->retRemoteMessage('error',"请输入真实姓名"));
        }
        $count = Db::table('db_user')->where(array('u_name' => $trueName))->count();
        if ($count){
            return $this->ajaxReturn($this->retRemoteMessage('ok',''));
        }else{
            return $this->ajaxReturn($this->retRemoteMessage('error','会员不存在，请确认！'));
        }
    }

/**
     * 检查会员真实姓名是否存在
     * @return bool
     */
    public function checkNickName(){
        $dttxnick =input('post.dttxnick', '', 'trim');
        if (empty($dttxnick)){
            $this->ajaxReturn($this->retRemoteMessage('error',"请输入大唐账号"));
        }
        $count = Db::table('db_user')->where(array('u_nick' => $dttxnick))->count();
        if ($count){
            return $this->ajaxReturn($this->retRemoteMessage('ok',''));
        }else{
            return $this->ajaxReturn($this->retRemoteMessage('error','大唐账号不存在，请确认！'));
        }
    }

    //通过商品编号获取商品型号
    public function getgoodsmodel(){
        $goodsNumber = input('get.number', '', 'htmlspecialchars,strip_tags,trim');

        empty($goodsNumber) && $this->ajaxReturn(array('state' => 'error', 'message' => '非法参数'));

        $where = array('bg_number' => $goodsNumber);
        $model = model('BaseGoods')->getAllGoodsInfoList('bg_model', $where);

        !$model && $this->ajaxReturn(array('state' => 'error', 'message' => '该商品暂无型号'));

        $option = '<option value="">请选择商品型号</option>';
        foreach($model as $key => $val){
            $option .= "<option value='" . $val['bg_model'] . "'>" . $val['bg_model'] . "</option>";
        }
        $this->ajaxReturn(array('state' => 'ok', 'message' => $option));
    }

    //通过商品编号获取商品型号
    public function getgoodssku(){
        $sid = input('get.number', '', 'intval');
        empty($sid) && $this->ajaxReturn(array('state' => 'error', 'model' => '非法参数','price'=>''));


        $goods =Db::name('shop_items')->alias('si')->field('bg_model,bg_price')->join('base_goods bg','si.si_goodsId=bg.bg_id','left')->where(['si_id'=>$sid,'si_isSale'=>1,'si_isDelete'=>0])->find();
        if (empty($goods)){
            $this->ajaxReturn(array('state' => 'error', 'model'=>'未找到商品','price'=>'0.00'));
        }
        $this->ajaxReturn(array('state' => 'ok', 'model'=>$goods['bg_model'],'price'=>$goods['bg_price']));
    }


    public function getgoodsformat(){
        $goodsNumber = input('get.number', '', 'htmlspecialchars,strip_tags,trim');

        empty($goodsNumber) && $this->ajaxReturn(array('state' => 'error', 'message' => '非法参数'));

        $where = array('bg_number' => $goodsNumber);
        $model = model('BaseGoods')->getAllGoodsInfoList('bg_format', $where);

        !$model && $this->ajaxReturn(array('state' => 'error', 'message' => '该商品暂无规格'));

        $option = '<option value="">请选择商品规格</option>';
        foreach($model as $key => $val){
            $option .= "<option value='" . $val['bg_format'] . "'>" . $val['bg_format'] . "</option>";
        }
        $this->ajaxReturn(array('state' => 'ok', 'message' => $option));
    }

    public function getgoodsprice(){
        $goodsNumber = input('get.number', '', 'htmlspecialchars,strip_tags,trim');//商品编号
        $model       = input('get.model', '', 'htmlspecialchars,strip_tags,trim');//商品型号

        (empty($goodsNumber) || empty($model)) && $this->ajaxReturn(array('state' => 'error', 'message' => '非法参数'));

        $where = array('bg_number' => $goodsNumber, 'bg_model' => $model);
        $price = model('BaseGoods')->getBaseGoodsOne('bg_price as price', $where);

        !$price && $this->ajaxReturn(array('state' => 'error', 'message' => '该商品暂无规格'));

        $this->ajaxReturn(array('state' => 'ok', 'message' => $price['price']));
    }

    public function checkuser(){
        $dttxnick = input('post.dttxnick', '', 'htmlspecialchars,strip_tags,trim');
        empty($dttxnick) && $this->ajaxReturn(ajaxCallBack(300, '请输入大唐账号或手机号'));

        $field = 'u.u_name as nick,u.u_tel as tel,du.u_name as recommendNick,du.u_tel as recommendTel';
        $join  = [
            ['db_user_platform up', 'up.up_uid =u.u_id', 'LEFT'],
            ['db_user du', 'du.u_code=up.up_fcode', 'LEFT']
        ];

        $user = model('User')->getUserByNickOrTel($dttxnick, $field, $join, true);
        !$user && $this->ajaxReturn(ajaxCallBack(300, '用户不存在'));

        $this->ajaxReturn(ajaxCallBack(200, $user['nick'] . '，' . $user['tel'] . ($user['recommendNick'] ? '，项目推荐人：' . $user['recommendNick'] : '')  . ($user['recommendTel'] ? '，' . $user['recommendTel'] : '')));
    }
	
	
    private function retRemoteMessage($type='ok',$message){
        return array($type=>$message);
    }

    /**
     * 自适应验证
     * @return \think\Response
     */

    public function captcha(){
        $config =    [
            // 验证码字体大小
            'fontSize'    =>    40,
            // 验证码位数
            'length'      =>    4,
            // 关闭验证码杂点
            'useNoise'    =>    true,
        ];
        $captcha =new Captcha($config);
        return  $captcha->entry();
    }

    /**
     * 根据父ID获取所属地区信息
     */
    public function ajax_area(){

        $pid  =Request::instance()->param('pid','0','intval');
        $show =Request::instance()->param('show','0','intval');
        if (empty($pid)){
            $this->ajaxReturn([['value'=>'0','label'=>'未选择']]);
        }
        $cacheId ='area_'.$pid.$show;
        if (Cache::has($cacheId)){
            return $this->ajaxReturn(Cache::get($cacheId));
        }else{
            $data = Db::name('area')->field('a_id,a_name')->where(['a_parenId'=>$pid,'a_status'=>0])->select();
            if (!empty($data)){
                $items =[];
                $show == 1 && $items[] = ['value' => '', 'label' => '请选择'];
                foreach ($data as $item){
                    $items[]=['value'=>$item['a_id'],'label'=>$item['a_name']];
                }
                Cache::set($cacheId,$items,3600);
                return $this->ajaxReturn($items);
            }else{
                return $this->ajaxReturn([['value'=>'0','label'=>'未选择']]);
            }
        }
    }


}