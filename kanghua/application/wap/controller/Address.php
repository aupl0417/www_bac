<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/7/6 0006
 * Time: 9:13
 */

namespace app\wap\controller;

use app\common\controller\Wap;
use app\platform\model\Area;
use think\Db;
use think\Request;
use think\Session;

class Address extends Wap{

    public function _initialize(){
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->addressModel = Db::name('user_delivery_address');
    }

    public function index(){
        $field   = 'ad_id as id,ad_userNick as nick,ad_phone as phone,ad_provinceId as provinceId,ad_cityId as cityId,ad_regionId as regionId,ad_address as address,ad_isDefault as isDefault';
        $address = $this->addressModel->where(['ad_isDelete' => 0, 'ad_userId' => session('user.userId')])->field($field)->order('ad_isDefault desc,ad_id desc')->select();
        if($address){
            $areaModel  = model('common/Area');
            foreach ($address as $key => &$val){
                $province   = $areaModel->getAreaById('a_name', $val['provinceId']);
                $city       = $areaModel->getAreaById('a_name', $val['cityId']);
                $region     = $areaModel->getAreaById('a_name', $val['regionId']);
                $val['area'] = ($province ? $province['a_name'] : '')  . ($city ? $city['a_name'] : '') . ($region ? $region['a_name'] : '');
            }
        }

        Session::set('callback', $_SERVER['REQUEST_URI']);

        $go =Request::instance()->param('go','');


        $this->assign('go',$go);
        $this->assign('address', $address);
        $this->assign('title', '管理收货地址');
        return $this->fetch();
    }

    /*
     * 添加地址
     * */
    public function create(){
        if(Request::instance()->isPost()){
            if (!Session::has('user') || Session::get('user.userId')==''){
                $this->ajaxReturn(ajaxCallBack(301, array('msg' => '您未登录', 'url' => url('login/index'))));
            }
            $addressInfo = $this->checkAddressInfo();
            if($addressInfo['statusCode'] == 300){
                $this->ajaxReturn(ajaxCallBack(300, $addressInfo['message']));
            }
            $data = $addressInfo['message'];
            $data['ad_userId']     = session('user.userId');

            $where = ['ad_userId' => $data['ad_userId'], 'ad_isDelete' => 0];
            if(!$this->addressModel->where($where)->count()){
                $data['ad_isDefault'] = 1;
            }else {
                if($data['ad_isDefault'] == 1){
                    $this->addressModel->where($where)->update(['ad_isDefault' => 0]);//如果该记录有设置默认，则把其它原有地址中的默认置为非默认
                }
            }
            $res = $this->addressModel->insert($data);

            !$res && $this->ajaxReturn(ajaxCallBack(300, '添加地址失败'));
            if (Session::has('tempurl')){
                if ($res){
                    session('tempurl', null);
                    $this->ajaxReturn(ajaxCallBack(301,['msg' => '添加地址成功', 'url'=>url('order/createorder')]));
                }
            }
            $this->ajaxReturn(ajaxCallBack(200, '添加地址成功'));
        }else{
            $areaModel = new Area();
            $area =$areaModel->findListByParentId(0);

            $ref =$_SERVER['HTTP_REFERER'];
            if (strpos($ref,'createorder')!==false){
                Session::set('tempurl','order/createorder');
            }

            $this->assign('area', $area);
            $this->assign('title', '添加收货地址');
            return $this->fetch();
        }
    }

    public function edit(){
        $id = input('id', 0, 'intval');
        !$id && $this->ajaxReturn(array('state' => 'error', 'message' => '参数非法'));

        $where = ['ad_userId' => session('user.userId'), 'ad_id' => $id, 'ad_isDelete' => 0];

        if(Request::instance()->isPost()){
            if (!Session::has('user') || Session::get('user.userId')==''){
                $this->ajaxReturn(ajaxCallBack(301, array('msg' => '您未登录', 'url' => url('login/index'))));
            }
            $addressInfo = $this->checkAddressInfo();
            if($addressInfo['statusCode'] == 300){
                $this->ajaxReturn(ajaxCallBack(300, $addressInfo['message']));
            }

            $data = $addressInfo['message'];
            $data['ad_userId']     = session('user.userId');

            if($data['ad_isDefault'] == 1){
                $this->addressModel->where(['ad_userId' => session('user.userId'), 'ad_isDelete' => 0])->update(['ad_isDefault' => 0]);//如果该记录有设置默认，则把其它原有地址中的默认置为非默认
            }

            $res = $this->addressModel->where($where)->update($data);
            $res === false && $this->ajaxReturn(ajaxCallBack(300, '编辑地址失败'));
            $this->ajaxReturn(ajaxCallBack(200, '编辑地址成功'));
        }else{
            $field = 'ad_id as id,ad_userNick as nick,ad_phone as phone,ad_provinceId as provinceId,ad_cityId as cityId,ad_regionId as regionId,ad_address as address,ad_postage as postage,ad_isDefault as isDefault';
            $addressInfo = $this->addressModel->where($where)->field($field)->find();
            if($addressInfo){
                $areaModel  = model('common/Area');
                $province   = $areaModel->getAreaById('a_name', $addressInfo['provinceId']);
                $city       = $areaModel->getAreaById('a_name', $addressInfo['cityId']);
                $region     = $areaModel->getAreaById('a_name', $addressInfo['regionId']);
                $addressInfo['area'] = ($province ? $province['a_name'] : '')  . ($city ? $city['a_name'] : '') . ($region ? $region['a_name'] : '');
            }
            $areaModel = new Area();
            $area =$areaModel->findListByParentId(0);

            $this->assign('area', $area);
            $this->assign('title', '编辑地址');
            $this->assign('data', $addressInfo);
            return $this->fetch();
        }

    }

    protected function checkAddressInfo(){
        $data['ad_userNick']   = input('receiver', '', 'htmlspecialchars,strip_tags,trim');
        $data['ad_phone']      = input('phone', '', 'htmlspecialchars,strip_tags,trim');
        $data['ad_provinceId'] = input('provinceId', '', 'htmlspecialchars,strip_tags,trim');
        $data['ad_cityId']     = input('cityId', '', 'htmlspecialchars,strip_tags,trim');
        $data['ad_regionId']   = input('regionId', '', 'htmlspecialchars,strip_tags,trim');
//        $data['ad_postage']    = input('postage', '', 'htmlspecialchars,strip_tags,trim');
        $data['ad_address']    = input('address', '', 'htmlspecialchars,strip_tags,trim');
        $data['ad_isDefault']  = input('isDefault', 0, 'intval');

        $result = $this->validate($data, 'Address');
        if(true !== $result){
            return ajaxCallBack(300, $result);
        }

        return ajaxCallBack(200, $data);
    }

    public function remove(){
        $id = input('id', 0, 'intval');
        !$id && $this->ajaxReturn(ajaxCallBack(300, '参数非法'));

        if (!Session::has('user') || Session::get('user.userId')==''){
            $this->ajaxReturn(ajaxCallBack(301, array('msg' => '您未登录', 'url' => url('login/index'))));
        }

        $address = $this->addressModel->where(['ad_userId' => session('user.userId'), 'ad_id' => $id, 'ad_isDelete' => 0])->field('ad_id as id,ad_isDefault')->find();
        if($address['ad_isDefault'] == 1){
            $condition = ['ad_userId' => session('user.userId'), 'ad_id' => array('neq', $id), 'ad_isDelete' => 0];
            $addressId = $this->addressModel->where($condition)->field('ad_id as id')->order('ad_id desc')->find();
            $res = $this->addressModel->where(['ad_userId' => session('user.userId'), 'ad_isDelete' => 0, 'ad_id' =>  $addressId['id']])->update(['ad_isDefault' => 1]);
        }

        $result = $this->addressModel->where(['ad_userId' => session('user.userId'), 'ad_id' => $id, 'ad_isDelete' => 0])->update(['ad_isDelete' => 1]);

        !$result && $this->ajaxReturn(ajaxCallBack(300, '删除地址失败'));
        $this->ajaxReturn(ajaxCallBack(200, '删除地址成功'));
    }

    public function setAddress(){

        $id = input('id', 0, 'intval');
        !$id && $this->ajaxReturn(array('state' => 'error', 'message' => '参数非法'));

        if (!Session::has('user') || Session::get('user.userId')==''){
//            session('callback', url('Address/index'));
            $this->ajaxReturn(ajaxCallBack(301, array('msg' => '您未登录', 'url' => url('login/index'))));
        }

        $res = $this->addressModel->where(['ad_userId' => session('user.userId'), 'ad_isDelete' => 0])->update(['ad_isDefault' => 0]);
        $resutl = $this->addressModel->where(['ad_userId' => session('user.userId'), 'ad_id' => $id, 'ad_isDelete' => 0])->update(['ad_isDefault' => 1]);

        !$resutl && $this->ajaxReturn(ajaxCallBack(300,'设置默认地址失败'));
        $this->ajaxReturn(ajaxCallBack(200, '设置默认地址成功'));
    }

}